*******************
>>> l2 = [s.removeAll("*,") for s in l]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'str' object has no attribute 'removeAll'
>>> l2 = [s.removeall("*,") for s in l]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'str' object has no attribute 'removeall'
>>> l2 = [s.replace("*,", '') for s in l]
>>> l2
['1,AGROIN', '2,MESUN
*****************
CNI', '9999GLOCAC', '9999HUMBLA', '9999UNIDEN', '10000AGROIN']
>>> l2 = [re.sub(".*,", '', s) for s in l]
>>> l2
#removed the numbers
*******************
>>> import random
>>> random.sample(species)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: sample() takes exactly 3 arguments (2 given)
>>> random.sample(species, 3)
['PALATH', 'PALAPE', 'XYLOCH']
>>> random.sample(species, 5)
['MESUNA', 'SYMPHI', 'BHESCE', 'SCHUCA', 'SHORTR']
>>> random.sample(species, 5)
['AGROHO', 'PAVEIN', 'PALACA', 'MESUFE', 'UNIDEN']
>>> random.sample(species, 5)
['AGROHO', 'GAERRO', 'HUMBLA', 'MESUNA', 'AGROHO']
>>> random.sample(species, 5)
['EUGEIN', 'GOMPSE', 'AGROHO', 'MESUNA', 'HUMBLA']
>>> random.sample(species, 5)
['IXORJU', 'MESUFE', 'MESUNA', 'UROPEL', 'UROPEL']
>>> random.sample(species, 5)
['PALATH', 'AGROIN', 'AGROIN', 'HUMBLA', 'HUMBLA']
>>> random.sample(species, 5)
['SHORME', 'PSYCDU', 'UNIDEN', 'SEMEWA', 'MEMERO']
>>> random.sample(species, 5)
['SHORCR', 'SHORDI', 'SEMEWA', 'PSYCGL', 'PAVEIN']
>>> random.sample(species, 5)
['HUMBLA', 'SYMPCO', 'SHORAF', 'CULLCE', 'MESUFE']
>>> random.sample(species, 5)
['HUMBLA', 'CULLRO', 'SHORWO', 'AGROHO', 'SEMEWA']
>>> random.sample(species, 5)
['GARCHE', 'DIOSHI', 'AGROIN', 'MEMERO', 'CALOBR']
>>> count = []
>>> for i in xrange(500, 100000, 500):
...     s = random.sample(species, i)
...     u = set(s)
...     count.append((i, len(u)))
... 
>>> count
[(500, 90), (1000, 114), (1500, 132), (2000, 135), (2500, 142), (3000, 151), (3500, 154), (4000, 157), (4500, 162), (5000, 161), (5500, 164), (6000, 162), (6500, 169), (7000, 167), (7500, 170), (8000, 173), (8500, 173), (9000, 170), (9500, 171), (10000, 171), (10500, 173), (11000, 172), (11500, 172), (12000, 181), (12500, 180), (13000, 179), (13500, 177), (14000, 177), (14500, 177), (15000, 178), (15500, 182), (16000, 180), (16500, 181), (17000, 181), (17500, 184), (18000, 179), (18500, 184), (19000, 187), (19500, 181), (20000, 183), (20500, 186), (21000, 183), (21500, 183), (22000, 185), (22500, 183), (23000, 187), (23500, 180), (24000, 181), (24500, 184), (25000, 183), (25500, 185), (26000, 184), (26500, 187), (27000, 182), (27500, 186), (28000, 189), (28500, 186), (29000, 182), (29500, 185), (30000, 192), (30500, 184), (31000, 187), (31500, 187), (32000, 188), (32500, 185), (33000, 187), (33500, 186), (34000, 187), (34500, 187), (35000, 187), (35500, 192), (36000, 186), (36500, 187), (37000, 183), (37500, 187), (38000, 189), (38500, 189), (39000, 190), (39500, 190), (40000, 186), (40500, 189), (41000, 194), (41500, 190), (42000, 190), (42500, 189), (43000, 191), (43500, 194), (44000, 191), (44500, 186), (45000, 193), (45500, 192), (46000, 190), (46500, 192), (47000, 189), (47500, 192), (48000, 194), (48500, 192), (49000, 192), (49500, 188), (50000, 190), (50500, 193), (51000, 193), (51500, 191), (52000, 194), (52500, 194), (53000, 193), (53500, 193), (54000, 194), (54500, 194), (55000, 190), (55500, 191), (56000, 192), (56500, 192), (57000, 194), (57500, 193), (58000, 195), (58500, 193), (59000, 193), (59500, 193), (60000, 190), (60500, 195), (61000, 195), (61500, 196), (62000, 191), (62500, 193), (63000, 194), (63500, 196), (64000, 195), (64500, 196), (65000, 197), (65500, 196), (66000, 193), (66500, 193), (67000, 195), (67500, 195), (68000, 192), (68500, 197), (69000, 196), (69500, 191), (70000, 194), (70500, 191), (71000, 194), (71500, 194), (72000, 196), (72500, 195), (73000, 198), (73500, 196), (74000, 195), (74500, 195), (75000, 193), (75500, 196), (76000, 195), (76500, 197), (77000, 197), (77500, 197), (78000, 196), (78500, 196), (79000, 196), (79500, 196), (80000, 195), (80500, 195), (81000, 195), (81500, 197), (82000, 195), (82500, 194), (83000, 197), (83500, 196), (84000, 196), (84500, 198), (85000, 195), (85500, 195), (86000, 198), (86500, 197), (87000, 198), (87500, 197), (88000, 197), (88500, 198), (89000, 197), (89500, 196), (90000, 197), (90500, 198), (91000, 198), (91500, 198), (92000, 197), (92500, 197), (93000, 197), (93500, 196), (94000, 197), (94500, 198), (95000, 197), (95500, 198), (96000, 198), (96500, 198), (97000, 198), (97500, 198), (98000, 198), (98500, 198), (99000, 198), (99500, 198)]
>>> import matplotlib
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ImportError: No module named matplotlib
>>> f = open('curve', 'a')
>>> for point in count:
...     i, j = point
...     f.write('{}\t{}\n'.format(i, j))
... 
>>> f.close()
>>> count = []
>>> for i in xrange(500, 100000, 500):
...     c = []
...     for j in range(10):
...             c.append(len(set(random.sample(species, i))))
...     dev = statistics.stdev(c)
...     m = statistics.mean(c)
...     count.append((i, m, dev))
... 
>>> count
[(500, 91.5, 4.719934086168766), (1000, 113.6, 4.376706016578627), (1500, 125.4, 3.2386554137309647), (2000, 135.2, 3.0477678535099892), (2500, 141.7, 3.591656999213594), (3000, 145.6, 3.0623157540948935), (3500, 151.8, 1.9321835661585918), (4000, 156.3, 3.2676869155073254), (4500, 156.1, 3.3813212407775355), (5000, 159.8, 3.7653389990514503), (5500, 160.8, 3.155242550986462), (6000, 163.5, 2.718251071716682), (6500, 163.6, 3.9496835316263), (7000, 164.5, 4.32691832858239), (7500, 166.8, 4.9396356140913875), (8000, 168.9, 1.7919573407620815), (8500, 168.5, 3.8078865529319543), (9000, 169.2, 3.9384147967311813), (9500, 171.4, 3.204163957519444), (10000, 170.7, 2.6687491868330793), (10500, 173.1, 2.378141197564929), (11000, 173.4, 3.6270588023294517), (11500, 175.5, 2.4608038433722332), (12000, 176.3, 2.3118054512532935), (12500, 174.8, 3.2249030993194197), (13000, 175.0, 3.0550504633038935), (13500, 176.0, 3.265986323710904), (14000, 177.2, 2.2997584414213788), (14500, 178.7, 3.653004851412662), (15000, 178.1, 1.4491376746189437), (15500, 179.7, 3.6224607965059086), (16000, 179.4, 3.0983866769659336), (16500, 178.5, 2.173067468400883), (17000, 180.6, 2.0110804171997807), (17500, 182.2, 2.820559440174157), (18000, 180.6, 1.8973665961010275), (18500, 181.2, 1.6865480854231356), (19000, 181.2, 2.973961069759395), (19500, 181.5, 3.5355339059327378), (20000, 181.7, 2.869378562220979), (20500, 182.7, 2.496664441476534), (21000, 181.7, 2.1628170930011112), (21500, 181.1, 2.6012817353502227), (22000, 183.3, 1.4181364924121764), (22500, 184.9, 2.806737924669451), (23000, 182.5, 2.9154759474226504), (23500, 184.5, 1.35400640077266), (24000, 182.5, 2.1213203435596424), (24500, 184.2, 2.0976176963403033), (25000, 185.2, 1.0327955589886444), (25500, 185.0, 2.309401076758503), (26000, 184.7, 1.888562063228706), (26500, 185.8, 3.155242550986462), (27000, 185.7, 2.79085809185793), (27500, 185.8, 1.7511900715418263), (28000, 186.4, 2.1186998109427604), (28500, 187.7, 2.359378449224852), (29000, 186.3, 2.057506581601462), (29500, 187.7, 2.359378449224852), (30000, 186.0, 2.3570226039551585), (30500, 186.0, 2.1081851067789197), (31000, 187.4, 1.7126976771553504), (31500, 186.9, 3.0349812373573433), (32000, 187.0, 1.8257418583505538), (32500, 187.5, 2.718251071716682), (33000, 187.4, 2.875181153713043), (33500, 188.0, 1.0540925533894598), (34000, 188.3, 2.359378449224852), (34500, 187.2, 1.3165611772087666), (35000, 188.0, 2.0548046676563256), (35500, 187.4, 2.3190036174568114), (36000, 187.3, 2.359378449224852), (36500, 188.5, 3.1710495984067415), (37000, 188.6, 1.577621275493231), (37500, 188.9, 1.1972189997378648), (38000, 188.6, 2.1186998109427604), (38500, 189.8, 2.440400695696417), (39000, 190.2, 2.3944379994757297), (39500, 189.2, 1.3984117975602022), (40000, 189.1, 1.66332999331662), (40500, 189.2, 2.14993539954628), (41000, 189.5, 2.5055493963954847), (41500, 190.3, 2.2135943621178655), (42000, 191.1, 1.728840330651992), (42500, 190.5, 1.7795130420052185), (43000, 189.8, 2.820559440174157), (43500, 190.1, 2.0789954839350235), (44000, 191.3, 1.636391694484477), (44500, 191.9, 2.1317702607092643), (45000, 191.8, 2.250925735484551), (45500, 190.7, 2.110818693198342), (46000, 191.7, 2.110818693198342), (46500, 190.6, 1.9550504398153572), (47000, 191.1, 1.4491376746189437), (47500, 191.3, 1.9465068427541912), (48000, 192.0, 1.9436506316151), (48500, 192.3, 2.4517567397911058), (49000, 191.5, 2.173067468400883), (49500, 191.7, 1.3374935098492586), (50000, 192.2, 1.3984117975602022), (50500, 191.5, 1.5811388300841898), (51000, 191.3, 1.766981104093143), (51500, 193.0, 1.7638342073763937), (52000, 192.0, 1.9436506316151), (52500, 192.1, 1.4491376746189437), (53000, 193.1, 1.66332999331662), (53500, 191.9, 1.3703203194062976), (54000, 192.2, 1.5491933384829668), (54500, 192.4, 2.1705094128132942), (55000, 191.8, 1.6193277068654826), (55500, 193.5, 2.798809270624444), (56000, 193.4, 1.505545305418162), (56500, 192.7, 1.766981104093143), (57000, 193.7, 1.8287822299126937), (57500, 192.7, 2.110818693198342), (58000, 191.8, 1.3165611772087666), (58500, 193.1, 2.0248456731316584), (59000, 193.3, 1.888562063228706), (59500, 192.9, 1.3703203194062976), (60000, 193.0, 1.632993161855452), (60500, 193.5, 2.3213980461973533), (61000, 194.0, 1.8257418583505538), (61500, 193.5, 2.3213980461973533), (62000, 193.6, 1.505545305418162), (62500, 194.1, 1.286683937707919), (63000, 194.2, 1.7511900715418263), (63500, 194.3, 1.2516655570345725), (64000, 192.7, 1.636391694484477), (64500, 194.5, 1.9578900207451218), (65000, 194.0, 1.3333333333333333), (65500, 194.8, 1.5491933384829668), (66000, 193.1, 2.0248456731316584), (66500, 194.5, 0.8498365855987975), (67000, 194.7, 0.9486832980505138), (67500, 194.7, 0.8232726023485646), (68000, 194.6, 1.6465452046971292), (68500, 194.7, 1.1595018087284057), (69000, 194.7, 1.3374935098492586), (69500, 195.9, 1.1972189997378648), (70000, 194.7, 1.4181364924121764), (70500, 194.8, 1.1352924243950933), (71000, 194.0, 1.632993161855452), (71500, 194.7, 1.9465068427541912), (72000, 195.2, 1.1352924243950933), (72500, 195.4, 1.837873166945363), (73000, 196.0, 0.6666666666666666), (73500, 195.7, 1.4944341180973264), (74000, 195.1, 1.7919573407620815), (74500, 194.9, 1.5951314818673865), (75000, 195.9, 1.1005049346146119), (75500, 196.0, 1.5634719199411433), (76000, 195.6, 1.577621275493231), (76500, 195.1, 1.5951314818673865), (77000, 195.4, 1.505545305418162), (77500, 195.4, 1.7126976771553504), (78000, 195.8, 1.0327955589886444), (78500, 196.1, 0.9944289260117533), (79000, 195.6, 1.3498971154211057), (79500, 196.3, 1.7029386365926402), (80000, 195.5, 1.1785113019775793), (80500, 196.2, 0.9189365834726815), (81000, 196.4, 1.2649110640673518), (81500, 195.8, 1.0327955589886444), (82000, 195.9, 1.5238839267549946), (82500, 196.6, 1.3498971154211057), (83000, 196.4, 1.1737877907772674), (83500, 195.6, 1.577621275493231), (84000, 196.3, 1.0593499054713802), (84500, 196.2, 0.9189365834726815), (85000, 196.2, 1.2292725943057183), (85500, 196.4, 1.429840705968481), (86000, 197.3, 1.3374935098492586), (86500, 196.5, 0.97182531580755), (87000, 196.0, 1.4907119849998598), (87500, 197.1, 0.9944289260117533), (88000, 196.9, 0.7378647873726218), (88500, 196.9, 0.9944289260117533), (89000, 197.2, 0.9189365834726815), (89500, 197.3, 0.48304589153964794), (90000, 197.5, 0.7071067811865476), (90500, 197.5, 0.5270462766947299), (91000, 197.1, 1.286683937707919), (91500, 197.2, 0.7888106377466155), (92000, 197.6, 0.6992058987801011), (92500, 197.0, 0.4714045207910317), (93000, 197.2, 0.7888106377466155), (93500, 197.4, 0.9660917830792959), (94000, 197.4, 0.8432740427115678), (94500, 197.7, 0.48304589153964794), (95000, 197.7, 0.48304589153964794), (95500, 197.7, 0.48304589153964794), (96000, 197.6, 0.5163977794943222), (96500, 197.8, 0.4216370213557839), (97000, 197.7, 0.48304589153964794), (97500, 197.8, 0.4216370213557839), (98000, 197.9, 0.31622776601683794), (98500, 198.0, 0.0), (99000, 198.0, 0.0), (99500, 198.0, 0.0)]
>>> count = []
>>> for i in xrange(500, 100000, 500):
...     c = []
...     for j in range(10):
...             c.append(len(set(random.sample(species, i))))
...     dev = statistics.stdev(c)
...     m = statistics.mean(c)
...     if dev < 0.0001:
...             dev = 0.0001
...     count.append((i, m, dev))
... 
>>> count
[(500, 89.0, 5.395471352079548), (1000, 114.9, 6.505553183413554), (1500, 124.2, 3.6453928305312844), (2000, 136.6, 4.835057163858332), (2500, 140.2, 4.131182235954578), (3000, 146.7, 4.715223571935199), (3500, 150.2, 3.119829055146024), (4000, 152.3, 3.9171985454460234), (4500, 157.8, 3.6453928305312844), (5000, 158.3, 3.683295625749672), (5500, 162.2, 3.190262963734773), (6000, 162.7, 3.1287200080686173), (6500, 163.1, 3.3482997343593826), (7000, 164.8, 1.7511900715418263), (7500, 166.3, 4.321779468896785), (8000, 168.5, 3.3416562759605704), (8500, 168.1, 2.2335820757001272), (9000, 171.6, 2.6749870196985173), (9500, 170.7, 1.7029386365926402), (10000, 172.4, 3.8643671323171835), (10500, 171.9, 2.183269719175042), (11000, 172.9, 3.478505426185217), (11500, 173.4, 1.9550504398153572), (12000, 174.0, 2.6246692913372702), (12500, 176.7, 3.743141876967945), (13000, 175.3, 2.3118054512532935), (13500, 175.8, 2.485513584307633), (14000, 175.2, 3.119829055146024), (14500, 178.7, 2.057506581601462), (15000, 178.1, 3.3813212407775355), (15500, 176.7, 2.3118054512532935), (16000, 178.5, 3.2744804507314167), (16500, 178.8, 3.0477678535099892), (17000, 180.2, 1.2292725943057183), (17500, 180.0, 2.6246692913372702), (18000, 179.2, 2.780887148615228), (18500, 181.0, 1.9436506316151), (19000, 181.3, 2.94580681270476), (19500, 180.5, 1.90029237516523), (20000, 180.5, 3.3416562759605704), (20500, 182.1, 2.726414006223804), (21000, 182.4, 2.3664319132398464), (21500, 182.0, 1.247219128924647), (22000, 182.6, 2.796823595120404), (22500, 183.8, 1.9321835661585918), (23000, 184.1, 2.6012817353502227), (23500, 185.1, 3.2472210341220142), (24000, 183.9, 2.4698178070456938), (24500, 184.7, 1.4944341180973264), (25000, 184.5, 3.2744804507314167), (25500, 185.5, 2.6352313834736494), (26000, 184.8, 2.973961069759395), (26500, 185.4, 3.134042472944842), (27000, 185.7, 2.5407785333546005), (27500, 183.7, 3.497618237219913), (28000, 184.5, 2.273030282830976), (28500, 185.8, 2.485513584307633), (29000, 186.1, 2.2335820757001272), (29500, 186.2, 2.14993539954628), (30000, 186.0, 2.449489742783178), (30500, 187.3, 2.110818693198342), (31000, 186.7, 2.6687491868330793), (31500, 188.5, 2.223610677354389), (32000, 187.4, 1.577621275493231), (32500, 187.1, 1.7919573407620815), (33000, 188.0, 2.494438257849294), (33500, 188.1, 2.0248456731316584), (34000, 187.6, 3.134042472944842), (34500, 188.8, 2.485513584307633), (35000, 188.2, 1.7511900715418263), (35500, 187.6, 3.025814858109391), (36000, 188.9, 1.5951314818673865), (36500, 188.7, 2.1628170930011112), (37000, 189.1, 2.0789954839350235), (37500, 188.9, 2.282785822435191), (38000, 188.6, 2.6749870196985173), (38500, 190.1, 1.7919573407620815), (39000, 190.7, 2.9832867780352594), (39500, 190.3, 1.7029386365926402), (40000, 189.8, 2.043961295567452), (40500, 190.8, 1.8135294011647258), (41000, 190.4, 1.6465452046971292), (41500, 190.4, 1.07496769977314), (42000, 189.4, 2.1186998109427604), (42500, 190.5, 2.068278940998476), (43000, 191.7, 2.1628170930011112), (43500, 190.1, 1.7919573407620815), (44000, 190.9, 1.8529256146249728), (44500, 190.9, 2.1317702607092643), (45000, 190.8, 2.043961295567452), (45500, 191.2, 1.5491933384829668), (46000, 190.4, 2.0110804171997807), (46500, 192.0, 1.7638342073763937), (47000, 191.7, 1.2516655570345725), (47500, 191.7, 2.3118054512532935), (48000, 191.3, 2.0027758514399734), (48500, 191.7, 1.3374935098492586), (49000, 191.3, 2.110818693198342), (49500, 190.7, 2.4517567397911058), (50000, 191.8, 1.3984117975602022), (50500, 192.6, 1.429840705968481), (51000, 192.9, 1.66332999331662), (51500, 192.0, 2.4037008503093262), (52000, 192.8, 1.0327955589886444), (52500, 192.9, 1.4491376746189437), (53000, 193.0, 1.4907119849998598), (53500, 192.5, 2.592724864350674), (54000, 192.9, 1.5951314818673865), (54500, 192.6, 1.837873166945363), (55000, 193.1, 1.1972189997378648), (55500, 192.8, 1.6193277068654826), (56000, 193.0, 1.8856180831641267), (56500, 193.3, 2.3118054512532935), (57000, 193.9, 1.5238839267549946), (57500, 193.8, 1.6865480854231356), (58000, 191.7, 1.4181364924121764), (58500, 193.0, 1.4907119849998598), (59000, 192.8, 2.2997584414213788), (59500, 193.5, 1.7159383568311668), (60000, 192.5, 1.5811388300841898), (60500, 193.4, 1.9550504398153572), (61000, 194.3, 1.766981104093143), (61500, 194.3, 1.5670212364724212), (62000, 193.4, 2.2211108331943574), (62500, 193.8, 1.3984117975602022), (63000, 193.2, 2.14993539954628), (63500, 193.8, 1.5491933384829668), (64000, 194.0, 1.8257418583505538), (64500, 194.0, 1.632993161855452), (65000, 194.5, 1.7795130420052185), (65500, 194.6, 1.3498971154211057), (66000, 193.4, 1.07496769977314), (66500, 194.6, 1.1737877907772674), (67000, 194.0, 2.6666666666666665), (67500, 194.8, 1.4757295747452437), (68000, 195.6, 1.07496769977314), (68500, 193.3, 1.5670212364724212), (69000, 194.1, 1.9692073983655907), (69500, 194.2, 1.3165611772087666), (70000, 194.6, 1.776388345929897), (70500, 195.1, 1.3703203194062976), (71000, 194.6, 1.577621275493231), (71500, 194.1, 1.5238839267549946), (72000, 195.1, 1.4491376746189437), (72500, 194.9, 1.1005049346146119), (73000, 194.7, 1.766981104093143), (73500, 195.9, 1.1972189997378648), (74000, 195.1, 1.1005049346146119), (74500, 195.7, 1.4944341180973264), (75000, 195.7, 1.1595018087284057), (75500, 195.9, 1.1005049346146119), (76000, 195.3, 1.4944341180973264), (76500, 196.2, 1.4757295747452437), (77000, 195.4, 1.3498971154211057), (77500, 196.0, 0.6666666666666666), (78000, 195.5, 1.5811388300841898), (78500, 195.6, 1.2649110640673518), (79000, 196.0, 1.632993161855452), (79500, 196.6, 1.2649110640673518), (80000, 195.9, 0.9944289260117533), (80500, 196.6, 0.8432740427115678), (81000, 196.0, 0.9428090415820634), (81500, 196.4, 0.8432740427115678), (82000, 196.2, 1.4757295747452437), (82500, 196.5, 1.2692955176439846), (83000, 197.1, 0.7378647873726218), (83500, 196.7, 1.1595018087284057), (84000, 196.5, 1.2692955176439846), (84500, 196.6, 1.1737877907772674), (85000, 197.0, 1.247219128924647), (85500, 196.8, 1.1352924243950933), (86000, 196.7, 0.8232726023485646), (86500, 196.6, 1.2649110640673518), (87000, 196.5, 1.1785113019775793), (87500, 197.0, 0.6666666666666666), (88000, 196.9, 0.9944289260117533), (88500, 197.2, 0.9189365834726815), (89000, 197.0, 0.816496580927726), (89500, 197.0, 0.9428090415820634), (90000, 197.3, 0.6749485577105528), (90500, 197.3, 0.8232726023485646), (91000, 197.0, 1.0540925533894598), (91500, 197.2, 0.9189365834726815), (92000, 197.4, 0.6992058987801011), (92500, 197.7, 0.48304589153964794), (93000, 197.4, 0.6992058987801011), (93500, 197.4, 0.6992058987801011), (94000, 197.5, 0.7071067811865476), (94500, 197.3, 0.8232726023485646), (95000, 197.8, 0.4216370213557839), (95500, 197.3, 0.6749485577105528), (96000, 197.6, 0.5163977794943222), (96500, 197.9, 0.31622776601683794), (97000, 197.8, 0.4216370213557839), (97500, 197.9, 0.31622776601683794), (98000, 198.0, 0.0001), (98500, 198.0, 0.0001), (99000, 198.0, 0.0001), (99500, 198.0, 0.0001)]
>>> f = open('curve', 'a')
>>> for point in count:
...     f.write('{}\t{}\t{}\n'.format(point))
... 
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
IndexError: tuple index out of range
>>> f.close()
>>> f = open('curve', 'a')
>>> for point in count:
...     i, j, k = point
...     f.write('{}\t{}\t{}\n'.format(i, j, k))
... 
>>> f.close()
>>> 


